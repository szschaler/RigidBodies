/*
 * generated by Xtext
 */
package uk.ac.kcl.inf.robotics.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import uk.ac.kcl.inf.robotics.services.RigidBodiesGrammarAccess;

public class RigidBodiesParser extends AbstractContentAssistParser {
	
	@Inject
	private RigidBodiesGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal.InternalRigidBodiesParser createParser() {
		uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal.InternalRigidBodiesParser result = new uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal.InternalRigidBodiesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRigidBodyAccess().getGroup(), "rule__RigidBody__Group__0");
					put(grammarAccess.getJointAccess().getGroup(), "rule__Joint__Group__0");
					put(grammarAccess.getMassAccess().getGroup(), "rule__Mass__Group__0");
					put(grammarAccess.getTransformationAccess().getGroup(), "rule__Transformation__Group__0");
					put(grammarAccess.getColocationConstraintAccess().getGroup(), "rule__ColocationConstraint__Group__0");
					put(grammarAccess.getModelAccess().getRigidBodiesAssignment(), "rule__Model__RigidBodiesAssignment");
					put(grammarAccess.getRigidBodyAccess().getNameAssignment_1(), "rule__RigidBody__NameAssignment_1");
					put(grammarAccess.getRigidBodyAccess().getJointsAssignment_3(), "rule__RigidBody__JointsAssignment_3");
					put(grammarAccess.getRigidBodyAccess().getMassesAssignment_4(), "rule__RigidBody__MassesAssignment_4");
					put(grammarAccess.getRigidBodyAccess().getConstraintsAssignment_5(), "rule__RigidBody__ConstraintsAssignment_5");
					put(grammarAccess.getJointAccess().getNameAssignment_1(), "rule__Joint__NameAssignment_1");
					put(grammarAccess.getMassAccess().getNameAssignment_1(), "rule__Mass__NameAssignment_1");
					put(grammarAccess.getMassAccess().getValueAssignment_2(), "rule__Mass__ValueAssignment_2");
					put(grammarAccess.getMassAccess().getTransformationsAssignment_5(), "rule__Mass__TransformationsAssignment_5");
					put(grammarAccess.getTransformationAccess().getJointAssignment_3(), "rule__Transformation__JointAssignment_3");
					put(grammarAccess.getColocationConstraintAccess().getJoint1Assignment_1(), "rule__ColocationConstraint__Joint1Assignment_1");
					put(grammarAccess.getColocationConstraintAccess().getJoint2Assignment_3(), "rule__ColocationConstraint__Joint2Assignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal.InternalRigidBodiesParser typedParser = (uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal.InternalRigidBodiesParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public RigidBodiesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(RigidBodiesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
