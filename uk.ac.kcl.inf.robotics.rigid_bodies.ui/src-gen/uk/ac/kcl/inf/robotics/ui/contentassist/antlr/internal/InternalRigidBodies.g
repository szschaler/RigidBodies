/*
 * generated by Xtext
 */
grammar InternalRigidBodies;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.robotics.services.RigidBodiesGrammarAccess;

}

@parser::members {
 
 	private RigidBodiesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RigidBodiesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialDefinition
entryRuleInitialDefinition 
:
{ before(grammarAccess.getInitialDefinitionRule()); }
	 ruleInitialDefinition
{ after(grammarAccess.getInitialDefinitionRule()); } 
	 EOF 
;

// Rule InitialDefinition
ruleInitialDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialDefinitionAccess().getAlternatives()); }
(rule__InitialDefinition__Alternatives)
{ after(grammarAccess.getInitialDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnvironment
entryRuleEnvironment 
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
(rule__Environment__Group__0)
{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystem
entryRuleSystem 
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemAccess().getGroup()); }
(rule__System__Group__0)
{ after(grammarAccess.getSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystemElement
entryRuleSystemElement 
:
{ before(grammarAccess.getSystemElementRule()); }
	 ruleSystemElement
{ after(grammarAccess.getSystemElementRule()); } 
	 EOF 
;

// Rule SystemElement
ruleSystemElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemElementAccess().getAlternatives()); }
(rule__SystemElement__Alternatives)
{ after(grammarAccess.getSystemElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnective
entryRuleConnective 
:
{ before(grammarAccess.getConnectiveRule()); }
	 ruleConnective
{ after(grammarAccess.getConnectiveRule()); } 
	 EOF 
;

// Rule Connective
ruleConnective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectiveAccess().getAlternatives()); }
(rule__Connective__Alternatives)
{ after(grammarAccess.getConnectiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBodyReference
entryRuleBodyReference 
:
{ before(grammarAccess.getBodyReferenceRule()); }
	 ruleBodyReference
{ after(grammarAccess.getBodyReferenceRule()); } 
	 EOF 
;

// Rule BodyReference
ruleBodyReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyReferenceAccess().getAlternatives()); }
(rule__BodyReference__Alternatives)
{ after(grammarAccess.getBodyReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMass
entryRuleMass 
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMassAccess().getGroup()); }
(rule__Mass__Group__0)
{ after(grammarAccess.getMassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoint
entryRuleJoint 
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJointAccess().getGroup()); }
(rule__Joint__Group__0)
{ after(grammarAccess.getJointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJointType
entryRuleJointType 
:
{ before(grammarAccess.getJointTypeRule()); }
	 ruleJointType
{ after(grammarAccess.getJointTypeRule()); } 
	 EOF 
;

// Rule JointType
ruleJointType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJointTypeAccess().getGroup()); }
(rule__JointType__Group__0)
{ after(grammarAccess.getJointTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJointTypeExpression
entryRuleJointTypeExpression 
:
{ before(grammarAccess.getJointTypeExpressionRule()); }
	 ruleJointTypeExpression
{ after(grammarAccess.getJointTypeExpressionRule()); } 
	 EOF 
;

// Rule JointTypeExpression
ruleJointTypeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAlternatives()); }
(rule__JointTypeExpression__Alternatives)
{ after(grammarAccess.getJointTypeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelativeTransformation
entryRuleRelativeTransformation 
:
{ before(grammarAccess.getRelativeTransformationRule()); }
	 ruleRelativeTransformation
{ after(grammarAccess.getRelativeTransformationRule()); } 
	 EOF 
;

// Rule RelativeTransformation
ruleRelativeTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelativeTransformationAccess().getGroup()); }
(rule__RelativeTransformation__Group__0)
{ after(grammarAccess.getRelativeTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReorientation
entryRuleReorientation 
:
{ before(grammarAccess.getReorientationRule()); }
	 ruleReorientation
{ after(grammarAccess.getReorientationRule()); } 
	 EOF 
;

// Rule Reorientation
ruleReorientation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReorientationAccess().getGroup()); }
(rule__Reorientation__Group__0)
{ after(grammarAccess.getReorientationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReorientExpression
entryRuleReorientExpression 
:
{ before(grammarAccess.getReorientExpressionRule()); }
	 ruleReorientExpression
{ after(grammarAccess.getReorientExpressionRule()); } 
	 EOF 
;

// Rule ReorientExpression
ruleReorientExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReorientExpressionAccess().getAlternatives()); }
(rule__ReorientExpression__Alternatives)
{ after(grammarAccess.getReorientExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalLoad
entryRuleExternalLoad 
:
{ before(grammarAccess.getExternalLoadRule()); }
	 ruleExternalLoad
{ after(grammarAccess.getExternalLoadRule()); } 
	 EOF 
;

// Rule ExternalLoad
ruleExternalLoad
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalLoadAccess().getGroup()); }
(rule__ExternalLoad__Group__0)
{ after(grammarAccess.getExternalLoadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatrix
entryRuleMatrix 
:
{ before(grammarAccess.getMatrixRule()); }
	 ruleMatrix
{ after(grammarAccess.getMatrixRule()); } 
	 EOF 
;

// Rule Matrix
ruleMatrix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatrixAccess().getAlternatives()); }
(rule__Matrix__Alternatives)
{ after(grammarAccess.getMatrixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseMatrix
entryRuleBaseMatrix 
:
{ before(grammarAccess.getBaseMatrixRule()); }
	 ruleBaseMatrix
{ after(grammarAccess.getBaseMatrixRule()); } 
	 EOF 
;

// Rule BaseMatrix
ruleBaseMatrix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseMatrixAccess().getGroup()); }
(rule__BaseMatrix__Group__0)
{ after(grammarAccess.getBaseMatrixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatrixRef
entryRuleMatrixRef 
:
{ before(grammarAccess.getMatrixRefRule()); }
	 ruleMatrixRef
{ after(grammarAccess.getMatrixRefRule()); } 
	 EOF 
;

// Rule MatrixRef
ruleMatrixRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatrixRefAccess().getMatrixAssignment()); }
(rule__MatrixRef__MatrixAssignment)
{ after(grammarAccess.getMatrixRefAccess().getMatrixAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExp
entryRuleAddExp 
:
{ before(grammarAccess.getAddExpRule()); }
	 ruleAddExp
{ after(grammarAccess.getAddExpRule()); } 
	 EOF 
;

// Rule AddExp
ruleAddExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpAccess().getGroup()); }
(rule__AddExp__Group__0)
{ after(grammarAccess.getAddExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExp
entryRuleMultExp 
:
{ before(grammarAccess.getMultExpRule()); }
	 ruleMultExp
{ after(grammarAccess.getMultExpRule()); } 
	 EOF 
;

// Rule MultExp
ruleMultExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpAccess().getGroup()); }
(rule__MultExp__Group__0)
{ after(grammarAccess.getMultExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesisedExp
entryRuleParenthesisedExp 
:
{ before(grammarAccess.getParenthesisedExpRule()); }
	 ruleParenthesisedExp
{ after(grammarAccess.getParenthesisedExpRule()); } 
	 EOF 
;

// Rule ParenthesisedExp
ruleParenthesisedExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesisedExpAccess().getGroup()); }
(rule__ParenthesisedExp__Group__0)
{ after(grammarAccess.getParenthesisedExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantOrFunctionCallExp
entryRuleConstantOrFunctionCallExp 
:
{ before(grammarAccess.getConstantOrFunctionCallExpRule()); }
	 ruleConstantOrFunctionCallExp
{ after(grammarAccess.getConstantOrFunctionCallExpRule()); } 
	 EOF 
;

// Rule ConstantOrFunctionCallExp
ruleConstantOrFunctionCallExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup()); }
(rule__ConstantOrFunctionCallExp__Group__0)
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AXIS
ruleAXIS
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAXISAccess().getAlternatives()); }
(rule__AXIS__Alternatives)
{ after(grammarAccess.getAXISAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ConstraintType
ruleConstraintType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintTypeAccess().getAlternatives()); }
(rule__ConstraintType__Alternatives)
{ after(grammarAccess.getConstraintTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LoadType
ruleLoadType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadTypeAccess().getAlternatives()); }
(rule__LoadType__Alternatives)
{ after(grammarAccess.getLoadTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__InitialDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialDefinitionAccess().getBaseMatrixParserRuleCall_0()); }
	ruleBaseMatrix
{ after(grammarAccess.getInitialDefinitionAccess().getBaseMatrixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitialDefinitionAccess().getJointTypeParserRuleCall_1()); }
	ruleJointType
{ after(grammarAccess.getInitialDefinitionAccess().getJointTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemElementAccess().getBodyParserRuleCall_0()); }
	ruleBody
{ after(grammarAccess.getSystemElementAccess().getBodyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSystemElementAccess().getConnectiveParserRuleCall_1()); }
	ruleConnective
{ after(grammarAccess.getSystemElementAccess().getConnectiveParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connective__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectiveAccess().getJointParserRuleCall_0()); }
	ruleJoint
{ after(grammarAccess.getConnectiveAccess().getJointParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConnectiveAccess().getConstraintParserRuleCall_1()); }
	ruleConstraint
{ after(grammarAccess.getConnectiveAccess().getConstraintParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConnectiveAccess().getExternalLoadParserRuleCall_2()); }
	ruleExternalLoad
{ after(grammarAccess.getConnectiveAccess().getExternalLoadParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyReferenceAccess().getBaseAssignment_0()); }
(rule__BodyReference__BaseAssignment_0)
{ after(grammarAccess.getBodyReferenceAccess().getBaseAssignment_0()); }
)

    |(
{ before(grammarAccess.getBodyReferenceAccess().getRefAssignment_1()); }
(rule__BodyReference__RefAssignment_1)
{ after(grammarAccess.getBodyReferenceAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRefAssignment_0()); }
(rule__JointTypeExpression__RefAssignment_0)
{ after(grammarAccess.getJointTypeExpressionAccess().getRefAssignment_0()); }
)

    |(
{ before(grammarAccess.getJointTypeExpressionAccess().getGroup_1()); }
(rule__JointTypeExpression__Group_1__0)
{ after(grammarAccess.getJointTypeExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getJointTypeExpressionAccess().getGroup_2()); }
(rule__JointTypeExpression__Group_2__0)
{ after(grammarAccess.getJointTypeExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getRefAssignment_0()); }
(rule__ReorientExpression__RefAssignment_0)
{ after(grammarAccess.getReorientExpressionAccess().getRefAssignment_0()); }
)

    |(
{ before(grammarAccess.getReorientExpressionAccess().getGroup_1()); }
(rule__ReorientExpression__Group_1__0)
{ after(grammarAccess.getReorientExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getBaseMatrixParserRuleCall_0()); }
	ruleBaseMatrix
{ after(grammarAccess.getMatrixAccess().getBaseMatrixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMatrixAccess().getMatrixRefParserRuleCall_1()); }
	ruleMatrixRef
{ after(grammarAccess.getMatrixAccess().getMatrixRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAddExpAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAddExpAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAddExpAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultExpAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultExpAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultExpAccess().getOpSolidusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_0()); }
	ruleNumberLiteral
{ after(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getParenthesisedExpParserRuleCall_1()); }
	ruleParenthesisedExp
{ after(grammarAccess.getPrimaryAccess().getParenthesisedExpParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getConstantOrFunctionCallExpParserRuleCall_2()); }
	ruleConstantOrFunctionCallExp
{ after(grammarAccess.getPrimaryAccess().getConstantOrFunctionCallExpParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AXIS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAXISAccess().getXEnumLiteralDeclaration_0()); }
(	'x' 
)
{ after(grammarAccess.getAXISAccess().getXEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAXISAccess().getYEnumLiteralDeclaration_1()); }
(	'y' 
)
{ after(grammarAccess.getAXISAccess().getYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAXISAccess().getZEnumLiteralDeclaration_2()); }
(	'z' 
)
{ after(grammarAccess.getAXISAccess().getZEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintTypeAccess().getGEOMETRICALEnumLiteralDeclaration_0()); }
(	'geometrical' 
)
{ after(grammarAccess.getConstraintTypeAccess().getGEOMETRICALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getConstraintTypeAccess().getVELOCITYEnumLiteralDeclaration_1()); }
(	'velocity' 
)
{ after(grammarAccess.getConstraintTypeAccess().getVELOCITYEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadTypeAccess().getFORCEEnumLiteralDeclaration_0()); }
(	'force' 
)
{ after(grammarAccess.getLoadTypeAccess().getFORCEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLoadTypeAccess().getTORQUEEnumLiteralDeclaration_1()); }
(	'torque' 
)
{ after(grammarAccess.getLoadTypeAccess().getTORQUEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefsAssignment_0()); }
(rule__Model__DefsAssignment_0)*
{ after(grammarAccess.getModelAccess().getDefsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getWorldAssignment_1()); }
(rule__Model__WorldAssignment_1)
{ after(grammarAccess.getModelAccess().getWorldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getBodiesAssignment_2()); }
(rule__Model__BodiesAssignment_2)
{ after(grammarAccess.getModelAccess().getBodiesAssignment_2()); }
)
(
{ before(grammarAccess.getModelAccess().getBodiesAssignment_2()); }
(rule__Model__BodiesAssignment_2)*
{ after(grammarAccess.getModelAccess().getBodiesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Environment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getWorldKeyword_0()); }

	'world' 

{ after(grammarAccess.getEnvironmentAccess().getWorldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__1__Impl
	rule__Environment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__2__Impl
	rule__Environment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getGravityKeyword_2()); }

	'gravity' 

{ after(grammarAccess.getEnvironmentAccess().getGravityKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__3__Impl
	rule__Environment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getGravityAssignment_3()); }
(rule__Environment__GravityAssignment_3)
{ after(grammarAccess.getEnvironmentAccess().getGravityAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Environment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__System__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameAssignment_1()); }
(rule__System__NameAssignment_1)
{ after(grammarAccess.getSystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSystemAccess().getElementsAssignment_3()); }
(rule__System__ElementsAssignment_3)
{ after(grammarAccess.getSystemAccess().getElementsAssignment_3()); }
)
(
{ before(grammarAccess.getSystemAccess().getElementsAssignment_3()); }
(rule__System__ElementsAssignment_3)*
{ after(grammarAccess.getSystemAccess().getElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getBodyKeyword_0()); }

	'body' 

{ after(grammarAccess.getBodyAccess().getBodyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getNameAssignment_1()); }
(rule__Body__NameAssignment_1)
{ after(grammarAccess.getBodyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__3__Impl
	rule__Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getMassAssignment_3()); }
(rule__Body__MassAssignment_3)
{ after(grammarAccess.getBodyAccess().getMassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Mass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getMassKeyword_0()); }

	'mass' 

{ after(grammarAccess.getMassAccess().getMassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getValueKeyword_2()); }

	'value' 

{ after(grammarAccess.getMassAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__3__Impl
	rule__Mass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getValueAssignment_3()); }
(rule__Mass__ValueAssignment_3)
{ after(grammarAccess.getMassAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__4__Impl
	rule__Mass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getPositionKeyword_4()); }

	'position' 

{ after(grammarAccess.getMassAccess().getPositionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__5__Impl
	rule__Mass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getPositionAssignment_5()); }
(rule__Mass__PositionAssignment_5)
{ after(grammarAccess.getMassAccess().getPositionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__6__Impl
	rule__Mass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getInertiaKeyword_6()); }

	'inertia' 

{ after(grammarAccess.getMassAccess().getInertiaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__7__Impl
	rule__Mass__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getInertiaAssignment_7()); }
(rule__Mass__InertiaAssignment_7)
{ after(grammarAccess.getMassAccess().getInertiaAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Joint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getJointKeyword_0()); }

	'joint' 

{ after(grammarAccess.getJointAccess().getJointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__1__Impl
	rule__Joint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getNameAssignment_1()); }
(rule__Joint__NameAssignment_1)
{ after(grammarAccess.getJointAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__2__Impl
	rule__Joint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getJointAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__3__Impl
	rule__Joint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getTypeAssignment_3()); }
(rule__Joint__TypeAssignment_3)
{ after(grammarAccess.getJointAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__4__Impl
	rule__Joint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getIsStartAssignment_4()); }
(rule__Joint__IsStartAssignment_4)?
{ after(grammarAccess.getJointAccess().getIsStartAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__5__Impl
	rule__Joint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getBetweenKeyword_5()); }

	'between' 

{ after(grammarAccess.getJointAccess().getBetweenKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__6__Impl
	rule__Joint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getBody1Assignment_6()); }
(rule__Joint__Body1Assignment_6)
{ after(grammarAccess.getJointAccess().getBody1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__7__Impl
	rule__Joint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getRelTrans1Assignment_7()); }
(rule__Joint__RelTrans1Assignment_7)
{ after(grammarAccess.getJointAccess().getRelTrans1Assignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__8__Impl
	rule__Joint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getAndKeyword_8()); }

	'and' 

{ after(grammarAccess.getJointAccess().getAndKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__9__Impl
	rule__Joint__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getBody2Assignment_9()); }
(rule__Joint__Body2Assignment_9)
{ after(grammarAccess.getJointAccess().getBody2Assignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__10__Impl
	rule__Joint__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getStiffnessKeyword_10()); }

	'stiffness' 

{ after(grammarAccess.getJointAccess().getStiffnessKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__11__Impl
	rule__Joint__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getLeftCurlyBracketKeyword_11()); }

	'{' 

{ after(grammarAccess.getJointAccess().getLeftCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__12__Impl
	rule__Joint__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringCoeffKeyword_12()); }

	'springCoeff' 

{ after(grammarAccess.getJointAccess().getSpringCoeffKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__13__Impl
	rule__Joint__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringCoeffAssignment_13()); }
(rule__Joint__SpringCoeffAssignment_13)
{ after(grammarAccess.getJointAccess().getSpringCoeffAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__14__Impl
	rule__Joint__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringInitKeyword_14()); }

	'springInit' 

{ after(grammarAccess.getJointAccess().getSpringInitKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__15__Impl
	rule__Joint__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringInitAssignment_15()); }
(rule__Joint__SpringInitAssignment_15)
{ after(grammarAccess.getJointAccess().getSpringInitAssignment_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__16__Impl
	rule__Joint__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampViscousKeyword_16()); }

	'dampViscous' 

{ after(grammarAccess.getJointAccess().getDampViscousKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__17__Impl
	rule__Joint__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampViscousAssignment_17()); }
(rule__Joint__DampViscousAssignment_17)
{ after(grammarAccess.getJointAccess().getDampViscousAssignment_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__18__Impl
	rule__Joint__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampCoulombKeyword_18()); }

	'dampCoulomb' 

{ after(grammarAccess.getJointAccess().getDampCoulombKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__19__Impl
	rule__Joint__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampCoulombAssignment_19()); }
(rule__Joint__DampCoulombAssignment_19)
{ after(grammarAccess.getJointAccess().getDampCoulombAssignment_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getRightCurlyBracketKeyword_20()); }

	'}' 

{ after(grammarAccess.getJointAccess().getRightCurlyBracketKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}












































rule__JointType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointType__Group__0__Impl
	rule__JointType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getGroup_0()); }
(rule__JointType__Group_0__0)?
{ after(grammarAccess.getJointTypeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getExpAssignment_1()); }
(rule__JointType__ExpAssignment_1)
{ after(grammarAccess.getJointTypeAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JointType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointType__Group_0__0__Impl
	rule__JointType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getJointKeyword_0_0()); }

	'joint' 

{ after(grammarAccess.getJointTypeAccess().getJointKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointType__Group_0__1__Impl
	rule__JointType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getTypeKeyword_0_1()); }

	'type' 

{ after(grammarAccess.getJointTypeAccess().getTypeKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointType__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointType__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getNameAssignment_0_2()); }
(rule__JointType__NameAssignment_0_2)
{ after(grammarAccess.getJointTypeAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JointTypeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1__0__Impl
	rule__JointTypeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRevoluteKeyword_1_0()); }

	'revolute' 

{ after(grammarAccess.getJointTypeExpressionAccess().getRevoluteKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1__1__Impl
	rule__JointTypeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getJointTypeExpressionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1__2__Impl
	rule__JointTypeExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_1_2()); }
(rule__JointTypeExpression__AxisAssignment_1_2)
{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1__3__Impl
	rule__JointTypeExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getGroup_1_3()); }
(rule__JointTypeExpression__Group_1_3__0)*
{ after(grammarAccess.getJointTypeExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getJointTypeExpressionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JointTypeExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1_3__0__Impl
	rule__JointTypeExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getJointTypeExpressionAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_1_3_1()); }
(rule__JointTypeExpression__AxisAssignment_1_3_1)
{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JointTypeExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2__0__Impl
	rule__JointTypeExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getPlanarKeyword_2_0()); }

	'planar' 

{ after(grammarAccess.getJointTypeExpressionAccess().getPlanarKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2__1__Impl
	rule__JointTypeExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getJointTypeExpressionAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2__2__Impl
	rule__JointTypeExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_2_2()); }
(rule__JointTypeExpression__AxisAssignment_2_2)
{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2__3__Impl
	rule__JointTypeExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getGroup_2_3()); }
(rule__JointTypeExpression__Group_2_3__0)*
{ after(grammarAccess.getJointTypeExpressionAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getJointTypeExpressionAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JointTypeExpression__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2_3__0__Impl
	rule__JointTypeExpression__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getJointTypeExpressionAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JointTypeExpression__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JointTypeExpression__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_2_3_1()); }
(rule__JointTypeExpression__AxisAssignment_2_3_1)
{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelativeTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__0__Impl
	rule__RelativeTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getRelativeTransformationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__1__Impl
	rule__RelativeTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getWithKeyword_1()); }

	'with' 

{ after(grammarAccess.getRelativeTransformationAccess().getWithKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__2__Impl
	rule__RelativeTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getRelativeKeyword_2()); }

	'relative' 

{ after(grammarAccess.getRelativeTransformationAccess().getRelativeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__3__Impl
	rule__RelativeTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getTransformationKeyword_3()); }

	'transformation' 

{ after(grammarAccess.getRelativeTransformationAccess().getTransformationKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__4__Impl
	rule__RelativeTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getPositionAssignment_4()); }
(rule__RelativeTransformation__PositionAssignment_4)
{ after(grammarAccess.getRelativeTransformationAccess().getPositionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__5__Impl
	rule__RelativeTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getRelativeTransformationAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__6__Impl
	rule__RelativeTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getReorientAssignment_6()); }
(rule__RelativeTransformation__ReorientAssignment_6)
{ after(grammarAccess.getRelativeTransformationAccess().getReorientAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelativeTransformation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getRelativeTransformationAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Reorientation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reorientation__Group__0__Impl
	rule__Reorientation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getGroup_0()); }
(rule__Reorientation__Group_0__0)?
{ after(grammarAccess.getReorientationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reorientation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reorientation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getExpAssignment_1()); }
(rule__Reorientation__ExpAssignment_1)
{ after(grammarAccess.getReorientationAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reorientation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reorientation__Group_0__0__Impl
	rule__Reorientation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getReorientKeyword_0_0()); }

	'reorient' 

{ after(grammarAccess.getReorientationAccess().getReorientKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reorientation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reorientation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getNameAssignment_0_1()); }
(rule__Reorientation__NameAssignment_0_1)
{ after(grammarAccess.getReorientationAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReorientExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1__0__Impl
	rule__ReorientExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1__1__Impl
	rule__ReorientExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getReorientExpressionAction_1_1()); }
(

)
{ after(grammarAccess.getReorientExpressionAccess().getReorientExpressionAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1__2__Impl
	rule__ReorientExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getGroup_1_2()); }
(rule__ReorientExpression__Group_1_2__0)?
{ after(grammarAccess.getReorientExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReorientExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__0__Impl
	rule__ReorientExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_2_0()); }

	'(' 

{ after(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__1__Impl
	rule__ReorientExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getAxisAssignment_1_2_1()); }
(rule__ReorientExpression__AxisAssignment_1_2_1)
{ after(grammarAccess.getReorientExpressionAccess().getAxisAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__2__Impl
	rule__ReorientExpression__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_2()); }

	',' 

{ after(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__3__Impl
	rule__ReorientExpression__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getValueAssignment_1_2_3()); }
(rule__ReorientExpression__ValueAssignment_1_2_3)
{ after(grammarAccess.getReorientExpressionAccess().getValueAssignment_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__4__Impl
	rule__ReorientExpression__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_2_4()); }

	')' 

{ after(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getGroup_1_2_5()); }
(rule__ReorientExpression__Group_1_2_5__0)*
{ after(grammarAccess.getReorientExpressionAccess().getGroup_1_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ReorientExpression__Group_1_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__0__Impl
	rule__ReorientExpression__Group_1_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_5_0()); }

	',' 

{ after(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__1__Impl
	rule__ReorientExpression__Group_1_2_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_2_5_1()); }

	'(' 

{ after(grammarAccess.getReorientExpressionAccess().getLeftParenthesisKeyword_1_2_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__2__Impl
	rule__ReorientExpression__Group_1_2_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getAxisAssignment_1_2_5_2()); }
(rule__ReorientExpression__AxisAssignment_1_2_5_2)
{ after(grammarAccess.getReorientExpressionAccess().getAxisAssignment_1_2_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__3__Impl
	rule__ReorientExpression__Group_1_2_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_5_3()); }

	',' 

{ after(grammarAccess.getReorientExpressionAccess().getCommaKeyword_1_2_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__4__Impl
	rule__ReorientExpression__Group_1_2_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getValueAssignment_1_2_5_4()); }
(rule__ReorientExpression__ValueAssignment_1_2_5_4)
{ after(grammarAccess.getReorientExpressionAccess().getValueAssignment_1_2_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReorientExpression__Group_1_2_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReorientExpression__Group_1_2_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__Group_1_2_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_2_5_5()); }

	')' 

{ after(grammarAccess.getReorientExpressionAccess().getRightParenthesisKeyword_1_2_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }

	'constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
(rule__Constraint__NameAssignment_1)
{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getConstraintAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTypeAssignment_3()); }
(rule__Constraint__TypeAssignment_3)
{ after(grammarAccess.getConstraintAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBetweenKeyword_4()); }

	'between' 

{ after(grammarAccess.getConstraintAccess().getBetweenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__5__Impl
	rule__Constraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBody1Assignment_5()); }
(rule__Constraint__Body1Assignment_5)
{ after(grammarAccess.getConstraintAccess().getBody1Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__6__Impl
	rule__Constraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRelTrans1Assignment_6()); }
(rule__Constraint__RelTrans1Assignment_6)
{ after(grammarAccess.getConstraintAccess().getRelTrans1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__7__Impl
	rule__Constraint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getAndKeyword_7()); }

	'and' 

{ after(grammarAccess.getConstraintAccess().getAndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__8__Impl
	rule__Constraint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBody2Assignment_8()); }
(rule__Constraint__Body2Assignment_8)
{ after(grammarAccess.getConstraintAccess().getBody2Assignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRelTrans2Assignment_9()); }
(rule__Constraint__RelTrans2Assignment_9)
{ after(grammarAccess.getConstraintAccess().getRelTrans2Assignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ExternalLoad__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__0__Impl
	rule__ExternalLoad__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalLoadAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__1__Impl
	rule__ExternalLoad__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getLoadKeyword_1()); }

	'load' 

{ after(grammarAccess.getExternalLoadAccess().getLoadKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__2__Impl
	rule__ExternalLoad__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getNameAssignment_2()); }
(rule__ExternalLoad__NameAssignment_2)
{ after(grammarAccess.getExternalLoadAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__3__Impl
	rule__ExternalLoad__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getExternalLoadAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__4__Impl
	rule__ExternalLoad__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getTypeAssignment_4()); }
(rule__ExternalLoad__TypeAssignment_4)
{ after(grammarAccess.getExternalLoadAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__5__Impl
	rule__ExternalLoad__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getAtKeyword_5()); }

	'at' 

{ after(grammarAccess.getExternalLoadAccess().getAtKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__6__Impl
	rule__ExternalLoad__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getBodyAssignment_6()); }
(rule__ExternalLoad__BodyAssignment_6)
{ after(grammarAccess.getExternalLoadAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLoad__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalLoad__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getRelTrans1Assignment_7()); }
(rule__ExternalLoad__RelTrans1Assignment_7)
{ after(grammarAccess.getExternalLoadAccess().getRelTrans1Assignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__BaseMatrix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group__0__Impl
	rule__BaseMatrix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getGroup_0()); }
(rule__BaseMatrix__Group_0__0)?
{ after(grammarAccess.getBaseMatrixAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group__1__Impl
	rule__BaseMatrix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getBaseMatrixAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group__2__Impl
	rule__BaseMatrix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getValuesAssignment_2()); }
(rule__BaseMatrix__ValuesAssignment_2)
{ after(grammarAccess.getBaseMatrixAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group__3__Impl
	rule__BaseMatrix__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getGroup_3()); }
(rule__BaseMatrix__Group_3__0)*
{ after(grammarAccess.getBaseMatrixAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getBaseMatrixAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BaseMatrix__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group_0__0__Impl
	rule__BaseMatrix__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getMatrixKeyword_0_0()); }

	'matrix' 

{ after(grammarAccess.getBaseMatrixAccess().getMatrixKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getNameAssignment_0_1()); }
(rule__BaseMatrix__NameAssignment_0_1)
{ after(grammarAccess.getBaseMatrixAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BaseMatrix__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group_3__0__Impl
	rule__BaseMatrix__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getBaseMatrixAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseMatrix__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseMatrix__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getValuesAssignment_3_1()); }
(rule__BaseMatrix__ValuesAssignment_3_1)
{ after(grammarAccess.getBaseMatrixAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group__0__Impl
	rule__AddExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getMultExpParserRuleCall_0()); }
	ruleMultExp
{ after(grammarAccess.getAddExpAccess().getMultExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getGroup_1()); }
(rule__AddExp__Group_1__0)*
{ after(grammarAccess.getAddExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__0__Impl
	rule__AddExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__1__Impl
	rule__AddExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getOpAssignment_1_1()); }
(rule__AddExp__OpAssignment_1_1)
{ after(grammarAccess.getAddExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getRightAssignment_1_2()); }
(rule__AddExp__RightAssignment_1_2)
{ after(grammarAccess.getAddExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExp__Group__0__Impl
	rule__MultExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
{ after(grammarAccess.getMultExpAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getGroup_1()); }
(rule__MultExp__Group_1__0)*
{ after(grammarAccess.getMultExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExp__Group_1__0__Impl
	rule__MultExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getMultExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpAccess().getMultExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExp__Group_1__1__Impl
	rule__MultExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getOpAssignment_1_1()); }
(rule__MultExp__OpAssignment_1_1)
{ after(grammarAccess.getMultExpAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getRightAssignment_1_2()); }
(rule__MultExp__RightAssignment_1_2)
{ after(grammarAccess.getMultExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParenthesisedExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisedExp__Group__0__Impl
	rule__ParenthesisedExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisedExpAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesisedExpAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisedExp__Group__1__Impl
	rule__ParenthesisedExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisedExpAccess().getExpAssignment_1()); }
(rule__ParenthesisedExp__ExpAssignment_1)
{ after(grammarAccess.getParenthesisedExpAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisedExp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisedExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisedExpAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesisedExpAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantOrFunctionCallExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group__0__Impl
	rule__ConstantOrFunctionCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getLabelAssignment_0()); }
(rule__ConstantOrFunctionCallExp__LabelAssignment_0)
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getLabelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantOrFunctionCallExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup_1()); }
(rule__ConstantOrFunctionCallExp__Group_1__0)?
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantOrFunctionCallExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1__0__Impl
	rule__ConstantOrFunctionCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantOrFunctionCallExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1__1__Impl
	rule__ConstantOrFunctionCallExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAssignment_1_1()); }
(rule__ConstantOrFunctionCallExp__ParamAssignment_1_1)
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantOrFunctionCallExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1__2__Impl
	rule__ConstantOrFunctionCallExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup_1_2()); }
(rule__ConstantOrFunctionCallExp__Group_1_2__0)*
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantOrFunctionCallExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantOrFunctionCallExp__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1_2__0__Impl
	rule__ConstantOrFunctionCallExp__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantOrFunctionCallExp__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantOrFunctionCallExp__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAssignment_1_2_1()); }
(rule__ConstantOrFunctionCallExp__ParamAssignment_1_2_1)
{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNegAssignment_0()); }
(rule__NumberLiteral__NegAssignment_0)?
{ after(grammarAccess.getNumberLiteralAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
(rule__NumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DefsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefsInitialDefinitionParserRuleCall_0_0()); }
	ruleInitialDefinition{ after(grammarAccess.getModelAccess().getDefsInitialDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__WorldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getWorldEnvironmentParserRuleCall_1_0()); }
	ruleEnvironment{ after(grammarAccess.getModelAccess().getWorldEnvironmentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BodiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBodiesSystemParserRuleCall_2_0()); }
	ruleSystem{ after(grammarAccess.getModelAccess().getBodiesSystemParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__GravityAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnvironmentAccess().getGravityMatrixParserRuleCall_3_0()); }
	ruleMatrix{ after(grammarAccess.getEnvironmentAccess().getGravityMatrixParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getElementsSystemElementParserRuleCall_3_0()); }
	ruleSystemElement{ after(grammarAccess.getSystemAccess().getElementsSystemElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__MassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getMassMassParserRuleCall_3_0()); }
	ruleMass{ after(grammarAccess.getBodyAccess().getMassMassParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyReference__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyReferenceAccess().getBaseBaseKeyword_0_0()); }
(
{ before(grammarAccess.getBodyReferenceAccess().getBaseBaseKeyword_0_0()); }

	'base' 

{ after(grammarAccess.getBodyReferenceAccess().getBaseBaseKeyword_0_0()); }
)

{ after(grammarAccess.getBodyReferenceAccess().getBaseBaseKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyReference__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyReferenceAccess().getRefBodyCrossReference_1_0()); }
(
{ before(grammarAccess.getBodyReferenceAccess().getRefBodyIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBodyReferenceAccess().getRefBodyIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBodyReferenceAccess().getRefBodyCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getValueAddExpParserRuleCall_3_0()); }
	ruleAddExp{ after(grammarAccess.getMassAccess().getValueAddExpParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__PositionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getPositionMatrixParserRuleCall_5_0()); }
	ruleMatrix{ after(grammarAccess.getMassAccess().getPositionMatrixParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__InertiaAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getInertiaMatrixParserRuleCall_7_0()); }
	ruleMatrix{ after(grammarAccess.getMassAccess().getInertiaMatrixParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getTypeJointTypeParserRuleCall_3_0()); }
	ruleJointType{ after(grammarAccess.getJointAccess().getTypeJointTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__IsStartAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getIsStartStartKeyword_4_0()); }
(
{ before(grammarAccess.getJointAccess().getIsStartStartKeyword_4_0()); }

	'start' 

{ after(grammarAccess.getJointAccess().getIsStartStartKeyword_4_0()); }
)

{ after(grammarAccess.getJointAccess().getIsStartStartKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Body1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getBody1BodyReferenceParserRuleCall_6_0()); }
	ruleBodyReference{ after(grammarAccess.getJointAccess().getBody1BodyReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__RelTrans1Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getRelTrans1RelativeTransformationParserRuleCall_7_0()); }
	ruleRelativeTransformation{ after(grammarAccess.getJointAccess().getRelTrans1RelativeTransformationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Body2Assignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getBody2BodyReferenceParserRuleCall_9_0()); }
	ruleBodyReference{ after(grammarAccess.getJointAccess().getBody2BodyReferenceParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__SpringCoeffAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringCoeffAddExpParserRuleCall_13_0()); }
	ruleAddExp{ after(grammarAccess.getJointAccess().getSpringCoeffAddExpParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__SpringInitAssignment_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getSpringInitAddExpParserRuleCall_15_0()); }
	ruleAddExp{ after(grammarAccess.getJointAccess().getSpringInitAddExpParserRuleCall_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__DampViscousAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampViscousAddExpParserRuleCall_17_0()); }
	ruleAddExp{ after(grammarAccess.getJointAccess().getDampViscousAddExpParserRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__DampCoulombAssignment_19
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getDampCoulombAddExpParserRuleCall_19_0()); }
	ruleAddExp{ after(grammarAccess.getJointAccess().getDampCoulombAddExpParserRuleCall_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getJointTypeAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointType__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeAccess().getExpJointTypeExpressionParserRuleCall_1_0()); }
	ruleJointTypeExpression{ after(grammarAccess.getJointTypeAccess().getExpJointTypeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRefJointTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJointTypeExpressionAccess().getRefJointTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getJointTypeExpressionAccess().getRefJointTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJointTypeExpressionAccess().getRefJointTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__AxisAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_1_2_0()); }
	ruleAXIS{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__AxisAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_1_3_1_0()); }
	ruleAXIS{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__AxisAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_2_2_0()); }
	ruleAXIS{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JointTypeExpression__AxisAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_2_3_1_0()); }
	ruleAXIS{ after(grammarAccess.getJointTypeExpressionAccess().getAxisAXISEnumRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__PositionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getPositionMatrixParserRuleCall_4_0()); }
	ruleMatrix{ after(grammarAccess.getRelativeTransformationAccess().getPositionMatrixParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeTransformation__ReorientAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelativeTransformationAccess().getReorientReorientationParserRuleCall_6_0()); }
	ruleReorientation{ after(grammarAccess.getRelativeTransformationAccess().getReorientReorientationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getReorientationAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reorientation__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientationAccess().getExpReorientExpressionParserRuleCall_1_0()); }
	ruleReorientExpression{ after(grammarAccess.getReorientationAccess().getExpReorientExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getRefReorientationCrossReference_0_0()); }
(
{ before(grammarAccess.getReorientExpressionAccess().getRefReorientationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReorientExpressionAccess().getRefReorientationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReorientExpressionAccess().getRefReorientationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__AxisAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getAxisAXISEnumRuleCall_1_2_1_0()); }
	ruleAXIS{ after(grammarAccess.getReorientExpressionAccess().getAxisAXISEnumRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__ValueAssignment_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getValueAddExpParserRuleCall_1_2_3_0()); }
	ruleAddExp{ after(grammarAccess.getReorientExpressionAccess().getValueAddExpParserRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__AxisAssignment_1_2_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getAxisAXISEnumRuleCall_1_2_5_2_0()); }
	ruleAXIS{ after(grammarAccess.getReorientExpressionAccess().getAxisAXISEnumRuleCall_1_2_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReorientExpression__ValueAssignment_1_2_5_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReorientExpressionAccess().getValueAddExpParserRuleCall_1_2_5_4_0()); }
	ruleAddExp{ after(grammarAccess.getReorientExpressionAccess().getValueAddExpParserRuleCall_1_2_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTypeConstraintTypeEnumRuleCall_3_0()); }
	ruleConstraintType{ after(grammarAccess.getConstraintAccess().getTypeConstraintTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Body1Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBody1BodyReferenceParserRuleCall_5_0()); }
	ruleBodyReference{ after(grammarAccess.getConstraintAccess().getBody1BodyReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RelTrans1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRelTrans1RelativeTransformationParserRuleCall_6_0()); }
	ruleRelativeTransformation{ after(grammarAccess.getConstraintAccess().getRelTrans1RelativeTransformationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Body2Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBody2BodyReferenceParserRuleCall_8_0()); }
	ruleBodyReference{ after(grammarAccess.getConstraintAccess().getBody2BodyReferenceParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RelTrans2Assignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRelTrans2RelativeTransformationParserRuleCall_9_0()); }
	ruleRelativeTransformation{ after(grammarAccess.getConstraintAccess().getRelTrans2RelativeTransformationParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getExternalLoadAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getTypeLoadTypeEnumRuleCall_4_0()); }
	ruleLoadType{ after(grammarAccess.getExternalLoadAccess().getTypeLoadTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getBodyBodyReferenceParserRuleCall_6_0()); }
	ruleBodyReference{ after(grammarAccess.getExternalLoadAccess().getBodyBodyReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLoad__RelTrans1Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalLoadAccess().getRelTrans1RelativeTransformationParserRuleCall_7_0()); }
	ruleRelativeTransformation{ after(grammarAccess.getExternalLoadAccess().getRelTrans1RelativeTransformationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getBaseMatrixAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_2_0()); }
	ruleAddExp{ after(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseMatrix__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_3_1_0()); }
	ruleAddExp{ after(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatrixRef__MatrixAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixRefAccess().getMatrixBaseMatrixCrossReference_0()); }
(
{ before(grammarAccess.getMatrixRefAccess().getMatrixBaseMatrixIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getMatrixRefAccess().getMatrixBaseMatrixIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getMatrixRefAccess().getMatrixBaseMatrixCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getOpAlternatives_1_1_0()); }
(rule__AddExp__OpAlternatives_1_1_0)
{ after(grammarAccess.getAddExpAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpAccess().getRightMultExpParserRuleCall_1_2_0()); }
	ruleMultExp{ after(grammarAccess.getAddExpAccess().getRightMultExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getOpAlternatives_1_1_0()); }
(rule__MultExp__OpAlternatives_1_1_0)
{ after(grammarAccess.getMultExpAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	rulePrimary{ after(grammarAccess.getMultExpAccess().getRightPrimaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisedExp__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisedExpAccess().getExpAddExpParserRuleCall_1_0()); }
	ruleAddExp{ after(grammarAccess.getParenthesisedExpAccess().getExpAddExpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__LabelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getLabelIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getLabelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__ParamAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_1_0()); }
	ruleAddExp{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantOrFunctionCallExp__ParamAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_2_1_0()); }
	ruleAddExp{ after(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNegHyphenMinusKeyword_0_0()); }
(
{ before(grammarAccess.getNumberLiteralAccess().getNegHyphenMinusKeyword_0_0()); }

	'-' 

{ after(grammarAccess.getNumberLiteralAccess().getNegHyphenMinusKeyword_0_0()); }
)

{ after(grammarAccess.getNumberLiteralAccess().getNegHyphenMinusKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueREALTerminalRuleCall_1_0()); }
	RULE_REAL{ after(grammarAccess.getNumberLiteralAccess().getValueREALTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+ (('e'|'E') ('+'|'-') ('0'..'9')* '.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


