/*
 * generated by Xtext
 */
grammar InternalRigidBodies;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.robotics.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.robotics.services.RigidBodiesGrammarAccess;

}

@parser::members {
 
 	private RigidBodiesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RigidBodiesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getModelAccess().getRigidBodiesAssignment()); }
(rule__Model__RigidBodiesAssignment)
{ after(grammarAccess.getModelAccess().getRigidBodiesAssignment()); }
)
(
{ before(grammarAccess.getModelAccess().getRigidBodiesAssignment()); }
(rule__Model__RigidBodiesAssignment)*
{ after(grammarAccess.getModelAccess().getRigidBodiesAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRigidBody
entryRuleRigidBody 
:
{ before(grammarAccess.getRigidBodyRule()); }
	 ruleRigidBody
{ after(grammarAccess.getRigidBodyRule()); } 
	 EOF 
;

// Rule RigidBody
ruleRigidBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRigidBodyAccess().getGroup()); }
(rule__RigidBody__Group__0)
{ after(grammarAccess.getRigidBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoint
entryRuleJoint 
:
{ before(grammarAccess.getJointRule()); }
	 ruleJoint
{ after(grammarAccess.getJointRule()); } 
	 EOF 
;

// Rule Joint
ruleJoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJointAccess().getGroup()); }
(rule__Joint__Group__0)
{ after(grammarAccess.getJointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMass
entryRuleMass 
:
{ before(grammarAccess.getMassRule()); }
	 ruleMass
{ after(grammarAccess.getMassRule()); } 
	 EOF 
;

// Rule Mass
ruleMass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMassAccess().getGroup()); }
(rule__Mass__Group__0)
{ after(grammarAccess.getMassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformation
entryRuleTransformation 
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationAccess().getGroup()); }
(rule__Transformation__Group__0)
{ after(grammarAccess.getTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getColocationConstraintParserRuleCall()); }
	ruleColocationConstraint
{ after(grammarAccess.getConstraintAccess().getColocationConstraintParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColocationConstraint
entryRuleColocationConstraint 
:
{ before(grammarAccess.getColocationConstraintRule()); }
	 ruleColocationConstraint
{ after(grammarAccess.getColocationConstraintRule()); } 
	 EOF 
;

// Rule ColocationConstraint
ruleColocationConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColocationConstraintAccess().getGroup()); }
(rule__ColocationConstraint__Group__0)
{ after(grammarAccess.getColocationConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RigidBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__0__Impl
	rule__RigidBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getRigid_bodyKeyword_0()); }

	'rigid_body' 

{ after(grammarAccess.getRigidBodyAccess().getRigid_bodyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__1__Impl
	rule__RigidBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getNameAssignment_1()); }
(rule__RigidBody__NameAssignment_1)
{ after(grammarAccess.getRigidBodyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__2__Impl
	rule__RigidBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRigidBodyAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__3__Impl
	rule__RigidBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRigidBodyAccess().getJointsAssignment_3()); }
(rule__RigidBody__JointsAssignment_3)
{ after(grammarAccess.getRigidBodyAccess().getJointsAssignment_3()); }
)
(
{ before(grammarAccess.getRigidBodyAccess().getJointsAssignment_3()); }
(rule__RigidBody__JointsAssignment_3)*
{ after(grammarAccess.getRigidBodyAccess().getJointsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__4__Impl
	rule__RigidBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRigidBodyAccess().getMassesAssignment_4()); }
(rule__RigidBody__MassesAssignment_4)
{ after(grammarAccess.getRigidBodyAccess().getMassesAssignment_4()); }
)
(
{ before(grammarAccess.getRigidBodyAccess().getMassesAssignment_4()); }
(rule__RigidBody__MassesAssignment_4)*
{ after(grammarAccess.getRigidBodyAccess().getMassesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__5__Impl
	rule__RigidBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getConstraintsAssignment_5()); }
(rule__RigidBody__ConstraintsAssignment_5)*
{ after(grammarAccess.getRigidBodyAccess().getConstraintsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RigidBody__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RigidBody__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getRigidBodyAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Joint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__0__Impl
	rule__Joint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getJointKeyword_0()); }

	'joint' 

{ after(grammarAccess.getJointAccess().getJointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Joint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Joint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getNameAssignment_1()); }
(rule__Joint__NameAssignment_1)
{ after(grammarAccess.getJointAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__0__Impl
	rule__Mass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getMassKeyword_0()); }

	'mass' 

{ after(grammarAccess.getMassAccess().getMassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__1__Impl
	rule__Mass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getNameAssignment_1()); }
(rule__Mass__NameAssignment_1)
{ after(grammarAccess.getMassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__2__Impl
	rule__Mass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getValueAssignment_2()); }
(rule__Mass__ValueAssignment_2)
{ after(grammarAccess.getMassAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__3__Impl
	rule__Mass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getKgKeyword_3()); }

	'kg' 

{ after(grammarAccess.getMassAccess().getKgKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__4__Impl
	rule__Mass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__5__Impl
	rule__Mass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMassAccess().getTransformationsAssignment_5()); }
(rule__Mass__TransformationsAssignment_5)
{ after(grammarAccess.getMassAccess().getTransformationsAssignment_5()); }
)
(
{ before(grammarAccess.getMassAccess().getTransformationsAssignment_5()); }
(rule__Mass__TransformationsAssignment_5)*
{ after(grammarAccess.getMassAccess().getTransformationsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mass__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getMassAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Transformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__0__Impl
	rule__Transformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }

	'transformation' 

{ after(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__1__Impl
	rule__Transformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getRelativeKeyword_1()); }

	'relative' 

{ after(grammarAccess.getTransformationAccess().getRelativeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__2__Impl
	rule__Transformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getTransformationAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__3__Impl
	rule__Transformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getJointAssignment_3()); }
(rule__Transformation__JointAssignment_3)
{ after(grammarAccess.getTransformationAccess().getJointAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__4__Impl
	rule__Transformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__5__Impl
	rule__Transformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_5()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__6__Impl
	rule__Transformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__7__Impl
	rule__Transformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_7()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__8__Impl
	rule__Transformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_8()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__9__Impl
	rule__Transformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_9()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__10__Impl
	rule__Transformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getTransformationAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__11__Impl
	rule__Transformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_11()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__12__Impl
	rule__Transformation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_12()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__13__Impl
	rule__Transformation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_13()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__14__Impl
	rule__Transformation__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_14()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__15__Impl
	rule__Transformation__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_15()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__16__Impl
	rule__Transformation__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSemicolonKeyword_16()); }

	';' 

{ after(grammarAccess.getTransformationAccess().getSemicolonKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__17__Impl
	rule__Transformation__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_17()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__18__Impl
	rule__Transformation__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_18()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__19__Impl
	rule__Transformation__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_19()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__20__Impl
	rule__Transformation__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getCommaKeyword_20()); }

	',' 

{ after(grammarAccess.getTransformationAccess().getCommaKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__21
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__21__Impl
	rule__Transformation__Group__22
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__21__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_21()); }
	RULE_REAL
{ after(grammarAccess.getTransformationAccess().getREALTerminalRuleCall_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__22
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__22__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__22__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getRightParenthesisKeyword_22()); }

	')' 

{ after(grammarAccess.getTransformationAccess().getRightParenthesisKeyword_22()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















































rule__ColocationConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColocationConstraint__Group__0__Impl
	rule__ColocationConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getColocateKeyword_0()); }

	'colocate' 

{ after(grammarAccess.getColocationConstraintAccess().getColocateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColocationConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColocationConstraint__Group__1__Impl
	rule__ColocationConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint1Assignment_1()); }
(rule__ColocationConstraint__Joint1Assignment_1)
{ after(grammarAccess.getColocationConstraintAccess().getJoint1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColocationConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColocationConstraint__Group__2__Impl
	rule__ColocationConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getColocationConstraintAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColocationConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColocationConstraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint2Assignment_3()); }
(rule__ColocationConstraint__Joint2Assignment_3)
{ after(grammarAccess.getColocationConstraintAccess().getJoint2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__RigidBodiesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRigidBodiesRigidBodyParserRuleCall_0()); }
	ruleRigidBody{ after(grammarAccess.getModelAccess().getRigidBodiesRigidBodyParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRigidBodyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__JointsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getJointsJointParserRuleCall_3_0()); }
	ruleJoint{ after(grammarAccess.getRigidBodyAccess().getJointsJointParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__MassesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getMassesMassParserRuleCall_4_0()); }
	ruleMass{ after(grammarAccess.getRigidBodyAccess().getMassesMassParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RigidBody__ConstraintsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRigidBodyAccess().getConstraintsConstraintParserRuleCall_5_0()); }
	ruleConstraint{ after(grammarAccess.getRigidBodyAccess().getConstraintsConstraintParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Joint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getValueREALTerminalRuleCall_2_0()); }
	RULE_REAL{ after(grammarAccess.getMassAccess().getValueREALTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mass__TransformationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMassAccess().getTransformationsTransformationParserRuleCall_5_0()); }
	ruleTransformation{ after(grammarAccess.getMassAccess().getTransformationsTransformationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__JointAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getJointJointCrossReference_3_0()); }
(
{ before(grammarAccess.getTransformationAccess().getJointJointIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationAccess().getJointJointIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransformationAccess().getJointJointCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Joint1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint1JointCrossReference_1_0()); }
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint1JointIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getColocationConstraintAccess().getJoint1JointIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getColocationConstraintAccess().getJoint1JointCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColocationConstraint__Joint2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint2JointCrossReference_3_0()); }
(
{ before(grammarAccess.getColocationConstraintAccess().getJoint2JointIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getColocationConstraintAccess().getJoint2JointIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getColocationConstraintAccess().getJoint2JointCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_REAL : ('0'..'9')+ '.' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


