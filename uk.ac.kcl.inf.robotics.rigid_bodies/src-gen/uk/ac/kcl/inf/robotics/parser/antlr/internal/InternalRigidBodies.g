/*
 * generated by Xtext
 */
grammar InternalRigidBodies;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package uk.ac.kcl.inf.robotics.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.robotics.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.kcl.inf.robotics.services.RigidBodiesGrammarAccess;

}

@parser::members {

 	private RigidBodiesGrammarAccess grammarAccess;
 	
    public InternalRigidBodiesParser(TokenStream input, RigidBodiesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected RigidBodiesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDefsInitialDefinitionParserRuleCall_0_0()); 
	    }
		lv_defs_0_0=ruleInitialDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"defs",
        		lv_defs_0_0, 
        		"InitialDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getWorldEnvironmentParserRuleCall_1_0()); 
	    }
		lv_world_1_0=ruleEnvironment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"world",
        		lv_world_1_0, 
        		"Environment");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBodiesSystemParserRuleCall_2_0()); 
	    }
		lv_bodies_2_0=ruleSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"bodies",
        		lv_bodies_2_0, 
        		"System");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getConfigurationConfigurationDefParserRuleCall_3_0()); 
	    }
		lv_configuration_3_0=ruleConfigurationDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"configuration",
        		lv_configuration_3_0, 
        		"ConfigurationDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInitialDefinition
entryRuleInitialDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialDefinitionRule()); }
	 iv_ruleInitialDefinition=ruleInitialDefinition 
	 { $current=$iv_ruleInitialDefinition.current; } 
	 EOF 
;

// Rule InitialDefinition
ruleInitialDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInitialDefinitionAccess().getBaseMatrixParserRuleCall_0()); 
    }
    this_BaseMatrix_0=ruleBaseMatrix
    { 
        $current = $this_BaseMatrix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInitialDefinitionAccess().getJointTypeParserRuleCall_1()); 
    }
    this_JointType_1=ruleJointType
    { 
        $current = $this_JointType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInitialDefinitionAccess().getBaseStiffnessExpParserRuleCall_2()); 
    }
    this_BaseStiffnessExp_2=ruleBaseStiffnessExp
    { 
        $current = $this_BaseStiffnessExp_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	 iv_ruleEnvironment=ruleEnvironment 
	 { $current=$iv_ruleEnvironment.current; } 
	 EOF 
;

// Rule Environment
ruleEnvironment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='world' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnvironmentAccess().getWorldKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='gravity' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnvironmentAccess().getGravityKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getGravityMatrixParserRuleCall_3_0()); 
	    }
		lv_gravity_3_0=ruleMatrix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		set(
       			$current, 
       			"gravity",
        		lv_gravity_3_0, 
        		"Matrix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	 iv_ruleSystem=ruleSystem 
	 { $current=$iv_ruleSystem.current; } 
	 EOF 
;

// Rule System
ruleSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemAccess().getElementsSystemElementParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=ruleSystemElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"SystemElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleConfigurationDef
entryRuleConfigurationDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationDefRule()); }
	 iv_ruleConfigurationDef=ruleConfigurationDef 
	 { $current=$iv_ruleConfigurationDef.current; } 
	 EOF 
;

// Rule ConfigurationDef
ruleConfigurationDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='configurations' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigurationDefAccess().getConfigurationsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigurationDefAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationDefAccess().getInstancesSystemInstantiationParserRuleCall_2_0()); 
	    }
		lv_instances_2_0=ruleSystemInstantiation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationDefRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_2_0, 
        		"SystemInstantiation");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationDefAccess().getConfigsConfigurationParserRuleCall_3_0()); 
	    }
		lv_configs_3_0=ruleConfiguration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationDefRule());
	        }
       		add(
       			$current, 
       			"configs",
        		lv_configs_3_0, 
        		"Configuration");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConfigurationDefAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSystemInstantiation
entryRuleSystemInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemInstantiationRule()); }
	 iv_ruleSystemInstantiation=ruleSystemInstantiation 
	 { $current=$iv_ruleSystemInstantiation.current; } 
	 EOF 
;

// Rule SystemInstantiation
ruleSystemInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='instantiate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemInstantiationAccess().getInstantiateKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemInstantiationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSystemInstantiationAccess().getSystemSystemCrossReference_1_0()); 
	}

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemInstantiationAccess().getAsKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getSystemInstantiationAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	 iv_ruleConfiguration=ruleConfiguration 
	 { $current=$iv_ruleConfiguration.current; } 
	 EOF 
;

// Rule Configuration
ruleConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationAccess().getStatementsConfigurationStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleConfigurationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"ConfigurationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleConfigurationStatement
entryRuleConfigurationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationStatementRule()); }
	 iv_ruleConfigurationStatement=ruleConfigurationStatement 
	 { $current=$iv_ruleConfigurationStatement.current; } 
	 EOF 
;

// Rule ConfigurationStatement
ruleConfigurationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getConfigurationStatementAccess().getLockStatementParserRuleCall()); 
    }
    this_LockStatement_0=ruleLockStatement
    { 
        $current = $this_LockStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleLockStatement
entryRuleLockStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLockStatementRule()); }
	 iv_ruleLockStatement=ruleLockStatement 
	 { $current=$iv_ruleLockStatement.current; } 
	 EOF 
;

// Rule LockStatement
ruleLockStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lock' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLockStatementAccess().getLockKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLockStatementRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLockStatementAccess().getSystemSystemInstantiationCrossReference_1_0()); 
	}

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLockStatementAccess().getFullStopKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLockStatementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getLockStatementAccess().getJointJointCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleSystemElement
entryRuleSystemElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemElementRule()); }
	 iv_ruleSystemElement=ruleSystemElement 
	 { $current=$iv_ruleSystemElement.current; } 
	 EOF 
;

// Rule SystemElement
ruleSystemElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSystemElementAccess().getBodyParserRuleCall_0()); 
    }
    this_Body_0=ruleBody
    { 
        $current = $this_Body_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSystemElementAccess().getConnectiveParserRuleCall_1()); 
    }
    this_Connective_1=ruleConnective
    { 
        $current = $this_Connective_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSystemElementAccess().getBodyRepetitionParserRuleCall_2()); 
    }
    this_BodyRepetition_2=ruleBodyRepetition
    { 
        $current = $this_BodyRepetition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSystemElementAccess().getJointConstraintParserRuleCall_3()); 
    }
    this_JointConstraint_3=ruleJointConstraint
    { 
        $current = $this_JointConstraint_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConnective
entryRuleConnective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectiveRule()); }
	 iv_ruleConnective=ruleConnective 
	 { $current=$iv_ruleConnective.current; } 
	 EOF 
;

// Rule Connective
ruleConnective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConnectiveAccess().getJointParserRuleCall_0()); 
    }
    this_Joint_0=ruleJoint
    { 
        $current = $this_Joint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectiveAccess().getConstraintParserRuleCall_1()); 
    }
    this_Constraint_1=ruleConstraint
    { 
        $current = $this_Constraint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectiveAccess().getExternalLoadParserRuleCall_2()); 
    }
    this_ExternalLoad_2=ruleExternalLoad
    { 
        $current = $this_ExternalLoad_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	 iv_ruleBody=ruleBody 
	 { $current=$iv_ruleBody.current; } 
	 EOF 
;

// Rule Body
ruleBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='body' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBodyAccess().getBodyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getMassMassParserRuleCall_3_0()); 
	    }
		lv_mass_3_0=ruleMass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		set(
       			$current, 
       			"mass",
        		lv_mass_3_0, 
        		"Mass");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBodyReference
entryRuleBodyReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyReferenceRule()); }
	 iv_ruleBodyReference=ruleBodyReference 
	 { $current=$iv_ruleBodyReference.current; } 
	 EOF 
;

// Rule BodyReference
ruleBodyReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_base_0_0=	'base' 
    {
        newLeafNode(lv_base_0_0, grammarAccess.getBodyReferenceAccess().getBaseBaseKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
       		setWithLastConsumed($current, "base", true, "base");
	    }

)
)
    |(
(
		lv_new_1_0=	'new' 
    {
        newLeafNode(lv_new_1_0, grammarAccess.getBodyReferenceAccess().getNewNewKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
       		setWithLastConsumed($current, "new", true, "new");
	    }

)
)
    |((
(
		lv_last_2_0=	'last' 
    {
        newLeafNode(lv_last_2_0, grammarAccess.getBodyReferenceAccess().getLastLastKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
       		setWithLastConsumed($current, "last", true, "last");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getBodyReferenceAccess().getRefBodyCrossReference_2_1_0()); 
	}

)
)?)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getBodyReferenceAccess().getRefBodyCrossReference_3_0_0()); 
	}

)
)(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBodyReferenceAccess().getLeftSquareBracketKeyword_3_1_0());
    }
(
(
		lv_idx_6_0=RULE_INT
		{
			newLeafNode(lv_idx_6_0, grammarAccess.getBodyReferenceAccess().getIdxINTTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"idx",
        		lv_idx_6_0, 
        		"INT");
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBodyReferenceAccess().getRightSquareBracketKeyword_3_1_2());
    }
)?))
;





// Entry rule entryRuleBodyRepetition
entryRuleBodyRepetition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyRepetitionRule()); }
	 iv_ruleBodyRepetition=ruleBodyRepetition 
	 { $current=$iv_ruleBodyRepetition.current; } 
	 EOF 
;

// Rule BodyRepetition
ruleBodyRepetition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repeat' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBodyRepetitionAccess().getRepeatKeyword_0());
    }
(
(
		lv_number_1_0=RULE_INT
		{
			newLeafNode(lv_number_1_0, grammarAccess.getBodyRepetitionAccess().getNumberINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRepetitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"number",
        		lv_number_1_0, 
        		"INT");
	    }

)
)	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBodyRepetitionAccess().getOfKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRepetitionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getBodyRepetitionAccess().getBodyBodyCrossReference_3_0()); 
	}

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBodyRepetitionAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyRepetitionAccess().getConnectionExpConnectiveParserRuleCall_5_0_0()); 
	    }
		lv_connectionExp_5_1=ruleConnective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRepetitionRule());
	        }
       		add(
       			$current, 
       			"connectionExp",
        		lv_connectionExp_5_1, 
        		"Connective");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getBodyRepetitionAccess().getConnectionExpJointConstraintParserRuleCall_5_0_1()); 
	    }
		lv_connectionExp_5_2=ruleJointConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRepetitionRule());
	        }
       		add(
       			$current, 
       			"connectionExp",
        		lv_connectionExp_5_2, 
        		"JointConstraint");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBodyRepetitionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMass
entryRuleMass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMassRule()); }
	 iv_ruleMass=ruleMass 
	 { $current=$iv_ruleMass.current; } 
	 EOF 
;

// Rule Mass
ruleMass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMassAccess().getMassKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMassAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='value' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMassAccess().getValueKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMassAccess().getValueAddExpParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMassRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='position' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMassAccess().getPositionKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMassAccess().getPositionMatrixParserRuleCall_5_0()); 
	    }
		lv_position_5_0=ruleMatrix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMassRule());
	        }
       		set(
       			$current, 
       			"position",
        		lv_position_5_0, 
        		"Matrix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='inertia' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMassAccess().getInertiaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMassAccess().getInertiaMatrixParserRuleCall_7_0()); 
	    }
		lv_inertia_7_0=ruleMatrix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMassRule());
	        }
       		set(
       			$current, 
       			"inertia",
        		lv_inertia_7_0, 
        		"Matrix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMassAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleJoint
entryRuleJoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJointRule()); }
	 iv_ruleJoint=ruleJoint 
	 { $current=$iv_ruleJoint.current; } 
	 EOF 
;

// Rule Joint
ruleJoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='joint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJointAccess().getJointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJointAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJointAccess().getTypeJointTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleJointType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJointRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JointType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_isStart_4_0=	'start' 
    {
        newLeafNode(lv_isStart_4_0, grammarAccess.getJointAccess().getIsStartStartKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointRule());
	        }
       		setWithLastConsumed($current, "isStart", true, "start");
	    }

)
)?	otherlv_5='between' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJointAccess().getBetweenKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJointAccess().getBody1BodyReferenceParserRuleCall_6_0()); 
	    }
		lv_body1_6_0=ruleBodyReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJointRule());
	        }
       		set(
       			$current, 
       			"body1",
        		lv_body1_6_0, 
        		"BodyReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJointAccess().getRelTrans1RelativeTransformationParserRuleCall_7_0()); 
	    }
		lv_relTrans1_7_0=ruleRelativeTransformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJointRule());
	        }
       		set(
       			$current, 
       			"relTrans1",
        		lv_relTrans1_7_0, 
        		"RelativeTransformation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='and' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getJointAccess().getAndKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJointAccess().getBody2BodyReferenceParserRuleCall_9_0()); 
	    }
		lv_body2_9_0=ruleBodyReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJointRule());
	        }
       		set(
       			$current, 
       			"body2",
        		lv_body2_9_0, 
        		"BodyReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJointType
entryRuleJointType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJointTypeRule()); }
	 iv_ruleJointType=ruleJointType 
	 { $current=$iv_ruleJointType.current; } 
	 EOF 
;

// Rule JointType
ruleJointType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='joint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJointTypeAccess().getJointKeyword_0_0());
    }
	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJointTypeAccess().getTypeKeyword_0_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getJointTypeAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getJointTypeAccess().getExpAdditiveJointTypeParserRuleCall_1_0()); 
	    }
		lv_exp_3_0=ruleAdditiveJointType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJointTypeRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"AdditiveJointType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAdditiveJointType
entryRuleAdditiveJointType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveJointTypeRule()); }
	 iv_ruleAdditiveJointType=ruleAdditiveJointType 
	 { $current=$iv_ruleAdditiveJointType.current; } 
	 EOF 
;

// Rule AdditiveJointType
ruleAdditiveJointType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditiveJointTypeAccess().getPrimaryJointTypeParserRuleCall_0()); 
    }
    this_PrimaryJointType_0=rulePrimaryJointType
    { 
        $current = $this_PrimaryJointType_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='+' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAdditiveJointTypeAccess().getPlusSignKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveJointTypeAccess().getAdditiveJointTypeLeftAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveJointTypeAccess().getRightPrimaryJointTypeParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePrimaryJointType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveJointTypeRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"PrimaryJointType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePrimaryJointType
entryRulePrimaryJointType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryJointTypeRule()); }
	 iv_rulePrimaryJointType=rulePrimaryJointType 
	 { $current=$iv_rulePrimaryJointType.current; } 
	 EOF 
;

// Rule PrimaryJointType
rulePrimaryJointType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryJointTypeAccess().getJointTypeReferenceParserRuleCall_0()); 
    }
    this_JointTypeReference_0=ruleJointTypeReference
    { 
        $current = $this_JointTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryJointTypeAccess().getBasicJointTypeParserRuleCall_1()); 
    }
    this_BasicJointType_1=ruleBasicJointType
    { 
        $current = $this_BasicJointType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJointTypeReference
entryRuleJointTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJointTypeReferenceRule()); }
	 iv_ruleJointTypeReference=ruleJointTypeReference 
	 { $current=$iv_ruleJointTypeReference.current; } 
	 EOF 
;

// Rule JointTypeReference
ruleJointTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointTypeReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getJointTypeReferenceAccess().getRefJointTypeCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleBasicJointType
entryRuleBasicJointType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicJointTypeRule()); }
	 iv_ruleBasicJointType=ruleBasicJointType 
	 { $current=$iv_ruleBasicJointType.current; } 
	 EOF 
;

// Rule BasicJointType
ruleBasicJointType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicJointTypeAccess().getTypeJointMovementParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleJointMovement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicJointTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"JointMovement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicJointTypeAccess().getWithKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicJointTypeAccess().getStiffnessStiffnessExpParserRuleCall_2_0()); 
	    }
		lv_stiffness_2_0=ruleStiffnessExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicJointTypeRule());
	        }
       		set(
       			$current, 
       			"stiffness",
        		lv_stiffness_2_0, 
        		"StiffnessExp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJointMovement
entryRuleJointMovement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJointMovementRule()); }
	 iv_ruleJointMovement=ruleJointMovement 
	 { $current=$iv_ruleJointMovement.current; } 
	 EOF 
;

// Rule JointMovement
ruleJointMovement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJointMovementAccess().getRevoluteParserRuleCall_0()); 
    }
    this_Revolute_0=ruleRevolute
    { 
        $current = $this_Revolute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJointMovementAccess().getPlanarParserRuleCall_1()); 
    }
    this_Planar_1=rulePlanar
    { 
        $current = $this_Planar_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRevolute
entryRuleRevolute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRevoluteRule()); }
	 iv_ruleRevolute=ruleRevolute 
	 { $current=$iv_ruleRevolute.current; } 
	 EOF 
;

// Rule Revolute
ruleRevolute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='revolute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRevoluteAccess().getRevoluteKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRevoluteAccess().getAxisAXISEnumRuleCall_1_0()); 
	    }
		lv_axis_1_0=ruleAXIS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRevoluteRule());
	        }
       		set(
       			$current, 
       			"axis",
        		lv_axis_1_0, 
        		"AXIS");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePlanar
entryRulePlanar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlanarRule()); }
	 iv_rulePlanar=rulePlanar 
	 { $current=$iv_rulePlanar.current; } 
	 EOF 
;

// Rule Planar
rulePlanar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='planar' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPlanarAccess().getPlanarKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlanarAccess().getAxisAXISEnumRuleCall_1_0()); 
	    }
		lv_axis_1_0=ruleAXIS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlanarRule());
	        }
       		set(
       			$current, 
       			"axis",
        		lv_axis_1_0, 
        		"AXIS");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStiffnessExp
entryRuleStiffnessExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStiffnessExpRule()); }
	 iv_ruleStiffnessExp=ruleStiffnessExp 
	 { $current=$iv_ruleStiffnessExp.current; } 
	 EOF 
;

// Rule StiffnessExp
ruleStiffnessExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStiffnessExpAccess().getStiffnessRefParserRuleCall_0()); 
    }
    this_StiffnessRef_0=ruleStiffnessRef
    { 
        $current = $this_StiffnessRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStiffnessExpAccess().getBaseStiffnessExpParserRuleCall_1()); 
    }
    this_BaseStiffnessExp_1=ruleBaseStiffnessExp
    { 
        $current = $this_BaseStiffnessExp_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStiffnessRef
entryRuleStiffnessRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStiffnessRefRule()); }
	 iv_ruleStiffnessRef=ruleStiffnessRef 
	 { $current=$iv_ruleStiffnessRef.current; } 
	 EOF 
;

// Rule StiffnessRef
ruleStiffnessRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStiffnessRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getStiffnessRefAccess().getRefBaseStiffnessExpCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleBaseStiffnessExp
entryRuleBaseStiffnessExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseStiffnessExpRule()); }
	 iv_ruleBaseStiffnessExp=ruleBaseStiffnessExp 
	 { $current=$iv_ruleBaseStiffnessExp.current; } 
	 EOF 
;

// Rule BaseStiffnessExp
ruleBaseStiffnessExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='stiffness' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBaseStiffnessExpAccess().getStiffnessKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBaseStiffnessExpAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseStiffnessExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))?	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBaseStiffnessExpAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_3='springCoeff' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBaseStiffnessExpAccess().getSpringCoeffKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStiffnessExpAccess().getSpringCoeffAddExpParserRuleCall_3_0()); 
	    }
		lv_springCoeff_4_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStiffnessExpRule());
	        }
       		set(
       			$current, 
       			"springCoeff",
        		lv_springCoeff_4_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='springInit' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBaseStiffnessExpAccess().getSpringInitKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStiffnessExpAccess().getSpringInitAddExpParserRuleCall_5_0()); 
	    }
		lv_springInit_6_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStiffnessExpRule());
	        }
       		set(
       			$current, 
       			"springInit",
        		lv_springInit_6_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='dampViscous' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBaseStiffnessExpAccess().getDampViscousKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStiffnessExpAccess().getDampViscousAddExpParserRuleCall_7_0()); 
	    }
		lv_dampViscous_8_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStiffnessExpRule());
	        }
       		set(
       			$current, 
       			"dampViscous",
        		lv_dampViscous_8_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='dampCoulomb' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBaseStiffnessExpAccess().getDampCoulombKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStiffnessExpAccess().getDampCoulombAddExpParserRuleCall_9_0()); 
	    }
		lv_dampCoulomb_10_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStiffnessExpRule());
	        }
       		set(
       			$current, 
       			"dampCoulomb",
        		lv_dampCoulomb_10_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBaseStiffnessExpAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleRelativeTransformation
entryRuleRelativeTransformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelativeTransformationRule()); }
	 iv_ruleRelativeTransformation=ruleRelativeTransformation 
	 { $current=$iv_ruleRelativeTransformation.current; } 
	 EOF 
;

// Rule RelativeTransformation
ruleRelativeTransformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelativeTransformationAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelativeTransformationAccess().getWithKeyword_1());
    }
	otherlv_2='relative' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelativeTransformationAccess().getRelativeKeyword_2());
    }
	otherlv_3='transformation' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRelativeTransformationAccess().getTransformationKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelativeTransformationAccess().getPositionMatrixParserRuleCall_4_0()); 
	    }
		lv_position_4_0=ruleMatrix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelativeTransformationRule());
	        }
       		set(
       			$current, 
       			"position",
        		lv_position_4_0, 
        		"Matrix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelativeTransformationAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelativeTransformationAccess().getReorientReorientationParserRuleCall_6_0()); 
	    }
		lv_reorient_6_0=ruleReorientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelativeTransformationRule());
	        }
       		set(
       			$current, 
       			"reorient",
        		lv_reorient_6_0, 
        		"Reorientation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRelativeTransformationAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleReorientation
entryRuleReorientation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReorientationRule()); }
	 iv_ruleReorientation=ruleReorientation 
	 { $current=$iv_ruleReorientation.current; } 
	 EOF 
;

// Rule Reorientation
ruleReorientation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='reorient' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReorientationAccess().getReorientKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReorientationAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReorientationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getReorientationAccess().getExpReorientExpressionParserRuleCall_1_0()); 
	    }
		lv_exp_2_0=ruleReorientExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReorientationRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"ReorientExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReorientExpression
entryRuleReorientExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReorientExpressionRule()); }
	 iv_ruleReorientExpression=ruleReorientExpression 
	 { $current=$iv_ruleReorientExpression.current; } 
	 EOF 
;

// Rule ReorientExpression
ruleReorientExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getReorientExpressionAccess().getReorientRefParserRuleCall_0()); 
    }
    this_ReorientRef_0=ruleReorientRef
    { 
        $current = $this_ReorientRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getReorientExpressionAccess().getBasicReorientExpressionParserRuleCall_1()); 
    }
    this_BasicReorientExpression_1=ruleBasicReorientExpression
    { 
        $current = $this_BasicReorientExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReorientRef
entryRuleReorientRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReorientRefRule()); }
	 iv_ruleReorientRef=ruleReorientRef 
	 { $current=$iv_ruleReorientRef.current; } 
	 EOF 
;

// Rule ReorientRef
ruleReorientRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReorientRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReorientRefAccess().getRefReorientationCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleBasicReorientExpression
entryRuleBasicReorientExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicReorientExpressionRule()); }
	 iv_ruleBasicReorientExpression=ruleBasicReorientExpression 
	 { $current=$iv_ruleBasicReorientExpression.current; } 
	 EOF 
;

// Rule BasicReorientExpression
ruleBasicReorientExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBasicReorientExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBasicReorientExpressionAccess().getBasicReorientExpressionAction_1(),
            $current);
    }
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBasicReorientExpressionAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicReorientExpressionAccess().getAxisAXISEnumRuleCall_2_1_0()); 
	    }
		lv_axis_3_0=ruleAXIS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicReorientExpressionRule());
	        }
       		add(
       			$current, 
       			"axis",
        		lv_axis_3_0, 
        		"AXIS");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBasicReorientExpressionAccess().getCommaKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicReorientExpressionAccess().getValueAddExpParserRuleCall_2_3_0()); 
	    }
		lv_value_5_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicReorientExpressionRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBasicReorientExpressionAccess().getRightParenthesisKeyword_2_4());
    }
(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBasicReorientExpressionAccess().getCommaKeyword_2_5_0());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBasicReorientExpressionAccess().getLeftParenthesisKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicReorientExpressionAccess().getAxisAXISEnumRuleCall_2_5_2_0()); 
	    }
		lv_axis_9_0=ruleAXIS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicReorientExpressionRule());
	        }
       		add(
       			$current, 
       			"axis",
        		lv_axis_9_0, 
        		"AXIS");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBasicReorientExpressionAccess().getCommaKeyword_2_5_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicReorientExpressionAccess().getValueAddExpParserRuleCall_2_5_4_0()); 
	    }
		lv_value_11_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicReorientExpressionRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_11_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBasicReorientExpressionAccess().getRightParenthesisKeyword_2_5_5());
    }
)*)?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBasicReorientExpressionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getTypeConstraintTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleConstraintType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ConstraintType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='between' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstraintAccess().getBetweenKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getBody1BodyReferenceParserRuleCall_5_0()); 
	    }
		lv_body1_5_0=ruleBodyReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"body1",
        		lv_body1_5_0, 
        		"BodyReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getRelTrans1RelativeTransformationParserRuleCall_6_0()); 
	    }
		lv_relTrans1_6_0=ruleRelativeTransformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"relTrans1",
        		lv_relTrans1_6_0, 
        		"RelativeTransformation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='and' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getAndKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getBody2BodyReferenceParserRuleCall_8_0()); 
	    }
		lv_body2_8_0=ruleBodyReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"body2",
        		lv_body2_8_0, 
        		"BodyReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getRelTrans2RelativeTransformationParserRuleCall_9_0()); 
	    }
		lv_relTrans2_9_0=ruleRelativeTransformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"relTrans2",
        		lv_relTrans2_9_0, 
        		"RelativeTransformation");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJointConstraint
entryRuleJointConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJointConstraintRule()); }
	 iv_ruleJointConstraint=ruleJointConstraint 
	 { $current=$iv_ruleJointConstraint.current; } 
	 EOF 
;

// Rule JointConstraint
ruleJointConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJointConstraintAccess().getConstraintKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJointConstraintAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJointConstraintAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointConstraintRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getJointConstraintAccess().getJoint1JointCrossReference_3_0()); 
	}

)
)	otherlv_4='moves' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJointConstraintAccess().getMovesKeyword_4());
    }
	otherlv_5='like' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJointConstraintAccess().getLikeKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJointConstraintRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getJointConstraintAccess().getJoint2JointCrossReference_6_0()); 
	}

)
))
;





// Entry rule entryRuleExternalLoad
entryRuleExternalLoad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalLoadRule()); }
	 iv_ruleExternalLoad=ruleExternalLoad 
	 { $current=$iv_ruleExternalLoad.current; } 
	 EOF 
;

// Rule ExternalLoad
ruleExternalLoad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalLoadAccess().getExternalKeyword_0());
    }
	otherlv_1='load' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalLoadAccess().getLoadKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getExternalLoadAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalLoadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternalLoadAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLoadAccess().getTypeLoadTypeEnumRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleLoadType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLoadRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"LoadType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='at' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExternalLoadAccess().getAtKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLoadAccess().getBody1BodyReferenceParserRuleCall_6_0()); 
	    }
		lv_body1_6_0=ruleBodyReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLoadRule());
	        }
       		set(
       			$current, 
       			"body1",
        		lv_body1_6_0, 
        		"BodyReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExternalLoadAccess().getLeftParenthesisKeyword_7());
    }
	otherlv_8='with' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExternalLoadAccess().getWithKeyword_8());
    }
	otherlv_9='relative' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExternalLoadAccess().getRelativeKeyword_9());
    }
	otherlv_10='transformation' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExternalLoadAccess().getTransformationKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLoadAccess().getPositionMatrixParserRuleCall_11_0()); 
	    }
		lv_position_11_0=ruleMatrix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLoadRule());
	        }
       		set(
       			$current, 
       			"position",
        		lv_position_11_0, 
        		"Matrix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getExternalLoadAccess().getRightParenthesisKeyword_12());
    }
)
;





// Entry rule entryRuleMatrix
entryRuleMatrix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrixRule()); }
	 iv_ruleMatrix=ruleMatrix 
	 { $current=$iv_ruleMatrix.current; } 
	 EOF 
;

// Rule Matrix
ruleMatrix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMatrixAccess().getBaseMatrixParserRuleCall_0()); 
    }
    this_BaseMatrix_0=ruleBaseMatrix
    { 
        $current = $this_BaseMatrix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatrixAccess().getMatrixRefParserRuleCall_1()); 
    }
    this_MatrixRef_1=ruleMatrixRef
    { 
        $current = $this_MatrixRef_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBaseMatrix
entryRuleBaseMatrix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseMatrixRule()); }
	 iv_ruleBaseMatrix=ruleBaseMatrix 
	 { $current=$iv_ruleBaseMatrix.current; } 
	 EOF 
;

// Rule BaseMatrix
ruleBaseMatrix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='matrix' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBaseMatrixAccess().getMatrixKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBaseMatrixAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseMatrixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))?	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBaseMatrixAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_2_0()); 
	    }
		lv_values_3_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseMatrixRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseMatrixAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseMatrixAccess().getValuesAddExpParserRuleCall_3_1_0()); 
	    }
		lv_values_5_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseMatrixRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBaseMatrixAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMatrixRef
entryRuleMatrixRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrixRefRule()); }
	 iv_ruleMatrixRef=ruleMatrixRef 
	 { $current=$iv_ruleMatrixRef.current; } 
	 EOF 
;

// Rule MatrixRef
ruleMatrixRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatrixRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getMatrixRefAccess().getMatrixBaseMatrixCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleAddExp
entryRuleAddExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddExpRule()); }
	 iv_ruleAddExp=ruleAddExp 
	 { $current=$iv_ruleAddExp.current; } 
	 EOF 
;

// Rule AddExp
ruleAddExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddExpAccess().getMultExpParserRuleCall_0()); 
    }
    this_MultExp_0=ruleMultExp
    { 
        $current = $this_MultExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAddExpAccess().getAddExpLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getAddExpAccess().getOpPlusSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddExpRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getAddExpAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddExpRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddExpAccess().getRightMultExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMultExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddExpRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MultExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultExp
entryRuleMultExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultExpRule()); }
	 iv_ruleMultExp=ruleMultExp 
	 { $current=$iv_ruleMultExp.current; } 
	 EOF 
;

// Rule MultExp
ruleMultExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultExpAccess().getPrimaryParserRuleCall_0()); 
    }
    this_Primary_0=rulePrimary
    { 
        $current = $this_Primary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultExpAccess().getMultExpLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getMultExpAccess().getOpAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultExpRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getMultExpAccess().getOpSolidusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultExpRule());
	        }
       		addWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultExpAccess().getRightPrimaryParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultExpRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_0()); 
    }
    this_NumberLiteral_0=ruleNumberLiteral
    { 
        $current = $this_NumberLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getParenthesisedExpParserRuleCall_1()); 
    }
    this_ParenthesisedExp_1=ruleParenthesisedExp
    { 
        $current = $this_ParenthesisedExp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getConstantOrFunctionCallExpParserRuleCall_2()); 
    }
    this_ConstantOrFunctionCallExp_2=ruleConstantOrFunctionCallExp
    { 
        $current = $this_ConstantOrFunctionCallExp_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParenthesisedExp
entryRuleParenthesisedExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParenthesisedExpRule()); }
	 iv_ruleParenthesisedExp=ruleParenthesisedExp 
	 { $current=$iv_ruleParenthesisedExp.current; } 
	 EOF 
;

// Rule ParenthesisedExp
ruleParenthesisedExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParenthesisedExpAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParenthesisedExpAccess().getExpAddExpParserRuleCall_1_0()); 
	    }
		lv_exp_1_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParenthesisedExpRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_1_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParenthesisedExpAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleConstantOrFunctionCallExp
entryRuleConstantOrFunctionCallExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantOrFunctionCallExpRule()); }
	 iv_ruleConstantOrFunctionCallExp=ruleConstantOrFunctionCallExp 
	 { $current=$iv_ruleConstantOrFunctionCallExp.current; } 
	 EOF 
;

// Rule ConstantOrFunctionCallExp
ruleConstantOrFunctionCallExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_label_0_0=RULE_ID
		{
			newLeafNode(lv_label_0_0, grammarAccess.getConstantOrFunctionCallExpAccess().getLabelIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantOrFunctionCallExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantOrFunctionCallExpAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_1_0()); 
	    }
		lv_param_2_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantOrFunctionCallExpRule());
	        }
       		add(
       			$current, 
       			"param",
        		lv_param_2_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantOrFunctionCallExpAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantOrFunctionCallExpAccess().getParamAddExpParserRuleCall_1_2_1_0()); 
	    }
		lv_param_4_0=ruleAddExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantOrFunctionCallExpRule());
	        }
       		add(
       			$current, 
       			"param",
        		lv_param_4_0, 
        		"AddExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantOrFunctionCallExpAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current; } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_neg_0_0=	'-' 
    {
        newLeafNode(lv_neg_0_0, grammarAccess.getNumberLiteralAccess().getNegHyphenMinusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLiteralRule());
	        }
       		setWithLastConsumed($current, "neg", true, "-");
	    }

)
)?(
(
		lv_value_1_0=RULE_REAL
		{
			newLeafNode(lv_value_1_0, grammarAccess.getNumberLiteralAccess().getValueREALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"REAL");
	    }

)
))
;





// Rule AXIS
ruleAXIS returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='x' 
	{
        $current = grammarAccess.getAXISAccess().getXEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAXISAccess().getXEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='y' 
	{
        $current = grammarAccess.getAXISAccess().getYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAXISAccess().getYEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='z' 
	{
        $current = grammarAccess.getAXISAccess().getZEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAXISAccess().getZEnumLiteralDeclaration_2()); 
    }
));



// Rule ConstraintType
ruleConstraintType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='geometrical' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getGEOMETRICALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConstraintTypeAccess().getGEOMETRICALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='velocity' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getVELOCITYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConstraintTypeAccess().getVELOCITYEnumLiteralDeclaration_1()); 
    }
));



// Rule LoadType
ruleLoadType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='force' 
	{
        $current = grammarAccess.getLoadTypeAccess().getFORCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLoadTypeAccess().getFORCEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='torque' 
	{
        $current = grammarAccess.getLoadTypeAccess().getTORQUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLoadTypeAccess().getTORQUEEnumLiteralDeclaration_1()); 
    }
));



RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+ (('e'|'E') ('+'|'-') ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


